# Calculate means and standard deviations of your English/Spanish vowels ------
mean_f1_cent = mean(vowel_data$f1_cent)
mean_f2_cent = mean(vowel_data$f2_cent)
mean_tl_cent = mean(vowel_data$tl)
standard_deviation_f1 = sd(vowel_data$f1_cent)
standard_deviation_f2 = sd(vowel_data$f2_cent)
standard_deviation_tl = sd(vowel_data$tl)
english_f1_key = spread(vowel_data, key = language, value = f1_cent)
mean_f1_english = mean(english_f1_key$en)
# -----------------------------------------------------------------------------
# Calculate means and standard deviations of your English/Spanish vowels ------
mean_f1_cent = mean(vowel_data$f1_cent)
mean_f2_cent = mean(vowel_data$f2_cent)
mean_tl_cent = mean(vowel_data$tl)
standard_deviation_f1 = sd(vowel_data$f1_cent)
standard_deviation_f2 = sd(vowel_data$f2_cent)
standard_deviation_tl = sd(vowel_data$tl)
english_f1_key = spread(vowel_data, key = vowel, value = language, f1_cent)
View(vowel_data)
View(vowel_data)
# Calculate means and standard deviations of your English/Spanish vowels ------
mean_f1_cent = mean(vowel_data$f1_cent)
mean_f2_cent = mean(vowel_data$f2_cent)
mean_tl_cent = mean(vowel_data$tl)
standard_deviation_f1 = sd(vowel_data$f1_cent)
standard_deviation_f2 = sd(vowel_data$f2_cent)
standard_deviation_tl = sd(vowel_data$tl)
english_f1_key = spread(vowel_data, key = vowel, value = language, f1_cent)
# Calculate means and standard deviations of your English/Spanish vowels ------
mean_f1_cent = mean(vowel_data$f1_cent)
mean_f2_cent = mean(vowel_data$f2_cent)
mean_tl_cent = mean(vowel_data$tl)
standard_deviation_f1 = sd(vowel_data$f1_cent)
standard_deviation_f2 = sd(vowel_data$f2_cent)
standard_deviation_tl = sd(vowel_data$tl)
english_f1_key = spread(vowel_data, key = vowel, value = language, vl)
# Calculate means and standard deviations of your English/Spanish vowels ------
mean_f1_cent = mean(vowel_data$f1_cent)
mean_f2_cent = mean(vowel_data$f2_cent)
mean_tl_cent = mean(vowel_data$tl)
standard_deviation_f1 = sd(vowel_data$f1_cent)
standard_deviation_f2 = sd(vowel_data$f2_cent)
standard_deviation_tl = sd(vowel_data$tl)
english_f1_key = spread(vowel_data, key = vowel, value = language)
mean_f1_english = mean(english_f1_key$en)
# -----------------------------------------------------------------------------
View(english_f1_key)
View(english_f1_key)
library(tidyverse)
library(untidydata)
library(ggplot2)
library(readr)
library(readr)
vowel_data <- read_csv("pa_3/data/vowel_data.csv")
View(vowel_data)
# Calculate means and standard deviations of your English/Spanish vowels ------
mean_f1_cent = mean(vowel_data$f1_cent)
mean_f2_cent = mean(vowel_data$f2_cent)
mean_tl_cent = mean(vowel_data$tl)
standard_deviation_f1 = sd(vowel_data$f1_cent)
standard_deviation_f2 = sd(vowel_data$f2_cent)
standard_deviation_tl = sd(vowel_data$tl)
english_f1_key = spread(vowel_data, key = vowel, value = language)
mean_f1_english = mean(english_f1_key$en)
group_by(vowel_data)
# -----------------------------------------------------------------------------
# Calculate means and standard deviations of your English/Spanish vowels ------
mean_f1_cent = mean(vowel_data$f1_cent)
mean_f2_cent = mean(vowel_data$f2_cent)
mean_tl_cent = mean(vowel_data$tl)
standard_deviation_f1 = sd(vowel_data$f1_cent)
standard_deviation_f2 = sd(vowel_data$f2_cent)
standard_deviation_tl = sd(vowel_data$tl)
english_f1_key = spread(vowel_data, key = vowel, value = language)
mean_f1_english = mean(english_f1_key$en)
group_by(vowel_data)
group_by(vowel_data, language)
# -----------------------------------------------------------------------------
# Calculate means and standard deviations of your English/Spanish vowels ------
mean_f1_cent = mean(vowel_data$f1_cent)
mean_f2_cent = mean(vowel_data$f2_cent)
mean_tl_cent = mean(vowel_data$tl)
standard_deviation_f1 = sd(vowel_data$f1_cent)
standard_deviation_f2 = sd(vowel_data$f2_cent)
standard_deviation_tl = sd(vowel_data$tl)
english_f1_key = spread(vowel_data, key = vowel, value = language)
mean_f1_english = mean(english_f1_key$en)
group_by(vowel_data)
y = group_by(vowel_data, language)
# -----------------------------------------------------------------------------
View(y)
View(y)
# Calculate means and standard deviations of your English/Spanish vowels ------
mean_f1_cent = mean(vowel_data$f1_cent)
library(tidyverse)
library(untidydata)
library(ggplot2)
library(readr)
library(readr)
vowel_data <- read_csv("pa_3/data/vowel_data.csv")
View(vowel_data)
# Calculate means and standard deviations of your English/Spanish vowels ------
mean_f1_cent = mean(vowel_data$f1_cent)
mean_f2_cent = mean(vowel_data$f2_cent)
mean_tl_cent = mean(vowel_data$tl)
standard_deviation_f1 = sd(vowel_data$f1_cent)
standard_deviation_f2 = sd(vowel_data$f2_cent)
standard_deviation_tl = sd(vowel_data$tl)
english_f1_key = spread(vowel_data, key = vowel, value = language)
mean_f1_english = mean(english_f1_key$en)
group_by(vowel_data)
y = group_by(vowel_data, language)
# -----------------------------------------------------------------------------
View(english_f1_key)
# Calculate means and standard deviations of your English/Spanish vowels ------
mean_f1_cent = mean(vowel_data$f1_cent)
mean_f2_cent = mean(vowel_data$f2_cent)
mean_tl_cent = mean(vowel_data$tl)
standard_deviation_f1 = sd(vowel_data$f1_cent)
standard_deviation_f2 = sd(vowel_data$f2_cent)
standard_deviation_tl = sd(vowel_data$tl)
english_f1_key = spread(vowel_data, key = vowel, value = language)
mean_f1_english = mean(english_f1_key$en)
group_by(vowel_data)
y = group_by(vowel_data, language)
x= 1,2,3,4,5
# Calculate means and standard deviations of your English/Spanish vowels ------
mean_f1_cent = mean(vowel_data$f1_cent)
mean_f2_cent = mean(vowel_data$f2_cent)
mean_tl_cent = mean(vowel_data$tl)
standard_deviation_f1 = sd(vowel_data$f1_cent)
standard_deviation_f2 = sd(vowel_data$f2_cent)
standard_deviation_tl = sd(vowel_data$tl)
english_f1_key = spread(vowel_data, key = vowel, value = language)
mean_f1_english = mean(english_f1_key$en)
group_by(vowel_data)
y = group_by(vowel_data, language)
x= 1
y= 2
plot(x,y)
# -----------------------------------------------------------------------------
library(tidyverse)
library(untidydata)
library(ggplot2)
library(readr)
library(tidyverse)
library(untidydata)
library(ggplot2)
library(readr)
library(readr)
vowel_data <- read_csv("pa_3/data/vowel_data.csv")
View(vowel_data)
# Calculate means and standard deviations of your English/Spanish vowels ------
mean_f1_cent = mean(vowel_data$f1_cent)
mean_f2_cent = mean(vowel_data$f2_cent)
mean_tl_cent = mean(vowel_data$tl)
standard_deviation_f1 = sd(vowel_data$f1_cent)
standard_deviation_f2 = sd(vowel_data$f2_cent)
standard_deviation_tl = sd(vowel_data$tl)
english_f1_key = spread(vowel_data, key = vowel, value = language)
mean_f1_english = mean(english_f1_key$en)
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, mapping = aes(), ..., environment = parent.frame())
# 1. Plot trajectory length as a function of vowel and language ---------------
f1_cent = data(vowel_data, col = f1_cent)
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
f1_cent = data(vowel_data, col = f1_cent)
f2_cent = data(vowel_data, col = f2_cent)
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
f1_cent = data(vowel_data, col = f1_cent)
f2_cent = data(vowel_data, col = f2_cent)
ggplot(f1_cent,f2_cent)
# 1. Plot trajectory length as a function of vowel and language ---------------
f1_cent = data(vowel_data, col = f1_cent)
f2_cent = data(vowel_data, col = f2_cent)
ggplot(f1_cent,f2_cent, mapping = aes(), ..., environment = parent.frame()))
# 1. Plot trajectory length as a function of vowel and language ---------------
f1_cent = data(vowel_data, col = f1_cent)
f2_cent = data(vowel_data, col = f2_cent)
ggplot(data = f1_cent,f2_cent, mapping = aes(), ..., environment = parent.frame())
# 1. Plot trajectory length as a function of vowel and language ---------------
f1_cent = data(vowel_data, col = f1_cent)
f2_cent = data(vowel_data, col = f2_cent)
plot(f1_cent, f2_cent)
# 1. Plot trajectory length as a function of vowel and language ---------------
f1_cent = data(vowel_data, col = f1_cent)
f2_cent = data(vowel_data, col = f2_cent)
ggplot(., aes(x = f2_cent, y = f1_cent))+
geom_point()+
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(., aes(x = f2_cent, y = f1_cent))+
geom_point()+
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(., aes(x = f2_cent, y = f1_cent)
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(., aes(x = f2_cent, y = f1_cent)+
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(x,y)
# 1. Plot trajectory length as a function of vowel and language ---------------
x = f1_cent
y = f2_cent
ggplot(x,y)
# 1. Plot trajectory length as a function of vowel and language ---------------
x = f1_cent
y = f2_cent
ggplot(x,y) `aes()
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
x = f1_cent
y = f2_cent
ggplot(x,y)`aes()
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
x = f1_cent
y = f2_cent
ggplot(x,y)(., aes(x = f2, y = f1))+
geom_point()+
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = cty, y = hwy))
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = language, y = tl))
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl))
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = tl, y = vowel))
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = tl, y = vowel))
ggplot(data = vowel_data, aes(x = tl, y = language))
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = tl, y = vowel))
geom_point(data = vowel_data, aes (x = tl, y = vowel))
f <- ggplot(mpg, aes(cty, hwy))
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
geom_point(data = vowel_data, aes (x = tl, y = vowel))
# -----------------------------------------------------------------------------
# 2. Plot F1 as a function of vowel and language ------------------------------
geom_point(data = vowel_data, aes (x = tl, y = vowel))
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = tl, y = vowel))
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = tl, y = vowel)) + geom_point (geom_point(aes(color = cyl)) +
geom_smooth(method ="lm") +
coord_cartesian() +
scale_color_gradient() +
theme_bw()
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = tl, y = vowel)) + geom_point (geom_point(aes(color = cyl)) + geom_smooth(method ="lm") + coord_cartesian() + scale_color_gradient() + theme_bw()
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = tl, y = vowel)) + geom_point
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = tl, y = vowel)) + geom_point()
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = tl, y = vowel)) + geom_point(aes(color = cyl)
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = tl, y = vowel)) + geom_point()
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl)) + geom_point()
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl)) + geom_point(color = vowel)
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl)) + geom_point(data = vowel_data, aes(color)
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl)) + geom_point(aes(color = cyan)
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl)) + geom_point(aes(
)
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl)) + geom_point(aes)
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl)) + geom_point(aes(colors = cyl))
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl)) + geom_point(color = vowel)
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl)) + geom_point()
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl)) + geom_point(color = language)
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl)) + geom_point(data = vowel data, color = language)
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl)) + geom_point(data = vowel data, aes (color = language)
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl)) + geom_point(data = vowel data)
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl)) + geom_point(data)
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl)) + geom_point()
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl)) + geom_point()+ scale_y_reverse()+
scale_x_reverse()
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl)) + geom_point() + scale_y_reverse() + scale_x_reverse()
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl)) + geom_point()
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl, color = language)) + geom_point()
# -----------------------------------------------------------------------------
# 2. Plot F1 as a function of vowel and language ------------------------------
ggplot(data = vowel_data, aes(x = vowel, y = f1_cent, color = language)) + geom_point()
# -----------------------------------------------------------------------------
# 3. Plot F2 as a function of vowel and language ------------------------------
ggplot(data = vowel_data, aes(x = vowel, y = f2_cent, color = language)) + geom_point()
# -----------------------------------------------------------------------------
# Plot both vowel spaces together ---------------------------------------------
#
# This assumes your dataframe is called 'vowels'
# Before it will work you need to change 'eval=F' to 'eval=T'
#
vowel_means <- vowels %>%
group_by(vowel, language) %>%
summarize(f1_cent = mean(f1_cent), f2_cent = mean(f2_cent)) %>%
ungroup() %>%
mutate(order = case_when(vowel == "i" ~ 1, vowel == "a" ~ 2, TRUE ~ 3),
vowel = forcats::fct_reorder2(vowel, vowel, order)) %>%
arrange(order)
# Plot both vowel spaces together ---------------------------------------------
#
# This assumes your dataframe is called 'vowels'
# Before it will work you need to change 'eval=F' to 'eval=T'
#
vowel_means <- vowel_data %>%
group_by(vowel, language) %>%
summarize(f1_cent = mean(f1_cent), f2_cent = mean(f2_cent)) %>%
ungroup() %>%
mutate(order = case_when(vowel == "i" ~ 1, vowel == "a" ~ 2, TRUE ~ 3),
vowel = forcats::fct_reorder2(vowel, vowel, order)) %>%
arrange(order)
vowel_data %>%
mutate(vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(x = f2_cent, y = f1_cent, color = language, label = vowel)) +
geom_text(size = 3.5, alpha = 0.6, show.legend = F) +
geom_path(data = vowel_means, aes(group = language, lty = language),
color = "grey") +
geom_text(data = vowel_means, show.legend = F, size = 7) +
scale_y_reverse() +
scale_x_reverse() +
scale_color_brewer(palette = "Set1") +
labs(title = "Vowel space comparison",
subtitle = "Spectral centroids of English/Spanish cardinal vowels",
y = "F1 (hz)", x = "F2 (hz)") +
theme_minimal(base_size = 16)
# -----------------------------------------------------------------------------
# Plot both vowel spaces together ---------------------------------------------
#
# This assumes your dataframe is called 'vowels'
# Before it will work you need to change 'eval=F' to 'eval=T'
#
vowel_means <- vowel_data %>%
group_by(vowel, language) %>%
summarize(f1_cent = mean(f1_cent), f2_cent = mean(f2_cent)) %>%
ungroup() %>%
mutate(order = case_when(vowel == "i" ~ 1, vowel == "a" ~ 2, TRUE ~ 3),
vowel = forcats::fct_reorder2(vowel, vowel, order)) %>%
arrange(order)
# Plot both vowel spaces together ---------------------------------------------
#
# This assumes your dataframe is called 'vowels'
# Before it will work you need to change 'eval=F' to 'eval=T'
#
vowel_means <- vowel_data %>%
group_by(vowel, language) %>%
summarize(f1_cent = mean(f1_cent), f2_cent = mean(f2_cent)) %>%
ungroup() %>%
mutate(order = case_when(vowel == "i" ~ 1, vowel == "a" ~ 2, TRUE ~ 3),
vowel = forcats::fct_reorder2(vowel, vowel, order)) %>%
arrange(order)
library(tidyverse)
library(untidydata)
library(ggplot2)
library(readr)
library(readr)
vowel_data <- read_csv("pa_3/data/vowel_data.csv")
View(vowel_data)
# Calculate means and standard deviations of your English/Spanish vowels ------
mean_f1_cent = mean(vowel_data$f1_cent)
mean_f2_cent = mean(vowel_data$f2_cent)
mean_tl_cent = mean(vowel_data$tl)
standard_deviation_f1 = sd(vowel_data$f1_cent)
standard_deviation_f2 = sd(vowel_data$f2_cent)
standard_deviation_tl = sd(vowel_data$tl)
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl, color = language)) + geom_point()
# -----------------------------------------------------------------------------
# 2. Plot F1 as a function of vowel and language ------------------------------
ggplot(data = vowel_data, aes(x = vowel, y = f1_cent, color = language)) + geom_point()
# -----------------------------------------------------------------------------
# 3. Plot F2 as a function of vowel and language ------------------------------
ggplot(data = vowel_data, aes(x = vowel, y = f2_cent, color = language)) + geom_point()
# -----------------------------------------------------------------------------
# Plot trajectory length in the F1/F2 vowel space -----------------------------
#
# Hints:
# You will need to do some intense data manipulations first
# Check the help files for pivot_longer (?pivot_longer)
# You will need a combination of group_by, summarize, and pivot_longer
# (in that order)
#
# -----------------------------------------------------------------------------
# Plot both vowel spaces together ---------------------------------------------
#
# This assumes your dataframe is called 'vowels'
# Before it will work you need to change 'eval=F' to 'eval=T'
#
vowel_means <- vowel_data %>%
group_by(vowel, language) %>%
summarize(f1_cent = mean(f1_cent), f2_cent = mean(f2_cent)) %>%
ungroup() %>%
mutate(order = case_when(vowel == "i" ~ 1, vowel == "a" ~ 2, TRUE ~ 3),
vowel = forcats::fct_reorder2(vowel, vowel, order)) %>%
arrange(order)
vowel_data %>%
mutate(vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(x = f2_cent, y = f1_cent, color = language, label = vowel)) +
geom_text(size = 3.5, alpha = 0.6, show.legend = F) +
geom_path(data = vowel_means, aes(group = language, lty = language),
color = "grey") +
geom_text(data = vowel_means, show.legend = F, size = 7) +
scale_y_reverse() +
scale_x_reverse() +
scale_color_brewer(palette = "Set1") +
labs(title = "Vowel space comparison",
subtitle = "Spectral centroids of English/Spanish cardinal vowels",
y = "F1 (hz)", x = "F2 (hz)") +
theme_minimal(base_size = 16)
# -----------------------------------------------------------------------------
library(tidyverse)
library(untidydata)
library(ggplot2)
library(readr)
library(readr)
vowel_data <- read_csv("pa_3/data/vowel_data.csv")
View(vowel_data)
# Calculate means and standard deviations of your English/Spanish vowels ------
mean_f1_cent = mean(vowel_data$f1_cent)
mean_f2_cent = mean(vowel_data$f2_cent)
mean_tl_cent = mean(vowel_data$tl)
standard_deviation_f1 = sd(vowel_data$f1_cent)
standard_deviation_f2 = sd(vowel_data$f2_cent)
standard_deviation_tl = sd(vowel_data$tl)
# -----------------------------------------------------------------------------
# 1. Plot trajectory length as a function of vowel and language ---------------
ggplot(data = vowel_data, aes(x = vowel, y = tl, color = language)) + geom_point()
# -----------------------------------------------------------------------------
# 2. Plot F1 as a function of vowel and language ------------------------------
ggplot(data = vowel_data, aes(x = vowel, y = f1_cent, color = language)) + geom_point()
# -----------------------------------------------------------------------------
# 3. Plot F2 as a function of vowel and language ------------------------------
ggplot(data = vowel_data, aes(x = vowel, y = f2_cent, color = language)) + geom_point()
# -----------------------------------------------------------------------------
# Plot trajectory length in the F1/F2 vowel space -----------------------------
#
# Hints:
# You will need to do some intense data manipulations first
# Check the help files for pivot_longer (?pivot_longer)
# You will need a combination of group_by, summarize, and pivot_longer
# (in that order)
#
# -----------------------------------------------------------------------------
# Plot both vowel spaces together ---------------------------------------------
#
# This assumes your dataframe is called 'vowels'
# Before it will work you need to change 'eval=F' to 'eval=T'
#
vowel_means <- vowel_data %>%
group_by(vowel, language) %>%
summarize(f1_cent = mean(f1_cent), f2_cent = mean(f2_cent)) %>%
ungroup() %>%
mutate(order = case_when(vowel == "i" ~ 1, vowel == "a" ~ 2, TRUE ~ 3),
vowel = forcats::fct_reorder2(vowel, vowel, order)) %>%
arrange(order)
vowel_data %>%
mutate(vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(x = f2_cent, y = f1_cent, color = language, label = vowel)) +
geom_text(size = 3.5, alpha = 0.6, show.legend = F) +
geom_path(data = vowel_means, aes(group = language, lty = language),
color = "grey") +
geom_text(data = vowel_means, show.legend = F, size = 7) +
scale_y_reverse() +
scale_x_reverse() +
scale_color_brewer(palette = "Set1") +
labs(title = "Vowel space comparison",
subtitle = "Spectral centroids of English/Spanish cardinal vowels",
y = "F1 (hz)", x = "F2 (hz)") +
theme_minimal(base_size = 16)
# -----------------------------------------------------------------------------
